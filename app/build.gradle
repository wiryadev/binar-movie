plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
}

def localPropertiesFile = rootProject.file("local.properties")
def localProperties = new Properties()
localProperties.load(new FileInputStream(localPropertiesFile))

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.wiryadev.binar_movie"
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.wiryadev.binar_movie.utils.HiltTestRunner"

        buildConfigField("String" , "BASE_URL" , "\"https://api.themoviedb.org/3/\"")
        buildConfigField("String" , "BASE_IMAGE_URL" , "\"https://image.tmdb.org/t/p/original\"")
        buildConfigField("String" , "API_KEY" , localProperties['apiKey'])
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    namespace 'com.wiryadev.binar_movie'
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation "androidx.core:core-splashscreen:1.0.0-beta02"
    implementation 'androidx.appcompat:appcompat:1.4.1'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"

    // UI
    implementation "androidx.activity:activity-ktx:1.4.0"
    implementation "androidx.fragment:fragment-ktx:1.4.1"
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation "io.coil-kt:coil:2.0.0"
    implementation "androidx.paging:paging-runtime-ktx:3.1.1"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    // Lifecycle
    def lifecycle_version = "2.4.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Navigation
    def nav_version = "2.4.2"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Networking
    def okhttp_version = "4.9.3"
    def chucker_version = "3.5.2"
    def retrofit_version = "2.9.0"
    def moshi_version = "1.13.0"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.moshi:moshi:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"
    debugImplementation "com.github.chuckerteam.chucker:library:$chucker_version"
    releaseImplementation "com.github.chuckerteam.chucker:library-no-op:$chucker_version"

    // Room
    def room_version = "2.4.2"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Preference
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    // Hilt
    def hilt_version = "2.42"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Coroutines
    def coroutines_version = " 1.6.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    // testing
    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.1.3"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.4.0"
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.4.0'
    implementation 'androidx.test.espresso:espresso-idling-resource:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.4.0'
    androidTestImplementation "androidx.fragment:fragment-testing:1.4.1" //launchFragmentInContainer

    // mockito
    testImplementation 'org.mockito:mockito-inline:4.5.1'
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.0.0"

    // Kluent
    testImplementation 'org.amshove.kluent:kluent-android:1.68'
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:1.6.21"

    // Mock Web Server
    androidTestImplementation "com.squareup.okhttp3:okhttp-tls:$okhttp_version"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"

}